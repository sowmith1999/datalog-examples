(edge 0 1)
(edge 1 2)
;; (edge 3 1)
;; (edge 2 4)
;; (edge 4 3)
;; (edge 4 5)

[(path x y) <-- (edge x y)]
[(path x z) <-- (edge x y) (path y z)]

[(scc x y) <-- (path x y) (path y x)]

[(cyclic x) <-- (path x x)]

[(acyclic) <-- ~(cyclic _)]

;; (edge 0 1)
;; (edge 1 2)
;; (edge 3 1)
;; (edge 2 4)
;; (edge 4 3)
;; (edge 4 5)
;; (edge 6 5)
;; (edge 6 8)
;; (edge 8 9)
;; (edge 9 7)
;; (edge 7 6)
;;
;;
;; [(path x y) <-- (edge x y)]
;; [(path x z) <-- (edge x y) (path y z)]
;;
;; [(scc x y) <-- (path x y) (path y x)]
;; (list 1 1 (nil))
;; [(list src dst ?(list src _ lst)) <-- (scc src dst)]

