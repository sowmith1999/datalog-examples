[(flat-fixedparam id  "flat-list-4" flat-list-4-1-id ) (list-4-holder flat-list-4-1-id lifted-list-4-1-fact ) --> (fixedparam-holder id (fixedparam lifted-list-4-1-fact ))]
[(flat-list-0 id ) --> ( list-0-holder id [])]
[(flat-list-2 id  "flat-int" flat-int-2-id  "flat-app" flat-app-1-id ) (int-holder flat-int-2-id lifted-int-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-2-holder id [lifted-int-2-fact lifted-app-1-fact ])]
[(flat-if id  "flat-if" flat-if-3-id  "flat-if" flat-if-2-id  "flat-app" flat-app-1-id ) (if-holder flat-if-3-id lifted-if-3-fact ) (if-holder flat-if-2-id lifted-if-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> (if-holder id (if lifted-if-3-fact lifted-if-2-fact lifted-app-1-fact ))]
[(flat-ref id  "datum" datum1-val ) --> (ref-holder id (ref datum1-val ))]
[(flat-list-2 id  "flat-app" flat-app-2-id  "flat-ref" flat-ref-1-id ) (app-holder flat-app-2-id lifted-app-2-fact ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> ( list-2-holder id [lifted-app-2-fact lifted-ref-1-fact ])]
[(flat-list-2 id  "flat-app" flat-app-2-id  "flat-int" flat-int-1-id ) (app-holder flat-app-2-id lifted-app-2-fact ) (int-holder flat-int-1-id lifted-int-1-fact ) --> ( list-2-holder id [lifted-app-2-fact lifted-int-1-fact ])]
[(flat-define-prim id  "datum" datum2-val  "flat-varparam" flat-varparam-1-id ) (varparam-holder flat-varparam-1-id lifted-varparam-1-fact ) --> (define-prim-holder id (define-prim datum2-val lifted-varparam-1-fact ))]
[(flat-if id  "flat-app" flat-app-3-id  "flat-app" flat-app-2-id  "flat-ref" flat-ref-1-id ) (app-holder flat-app-3-id lifted-app-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> (if-holder id (if lifted-app-3-fact lifted-app-2-fact lifted-ref-1-fact ))]
[(flat-if id  "flat-app" flat-app-3-id  "flat-ref" flat-ref-2-id  "flat-if" flat-if-1-id ) (app-holder flat-app-3-id lifted-app-3-fact ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (if-holder flat-if-1-id lifted-if-1-fact ) --> (if-holder id (if lifted-app-3-fact lifted-ref-2-fact lifted-if-1-fact ))]
[(flat-if id  "flat-ref" flat-ref-3-id  "flat-bool" flat-bool-2-id  "flat-bool" flat-bool-1-id ) (ref-holder flat-ref-3-id lifted-ref-3-fact ) (bool-holder flat-bool-2-id lifted-bool-2-fact ) (bool-holder flat-bool-1-id lifted-bool-1-fact ) --> (if-holder id (if lifted-ref-3-fact lifted-bool-2-fact lifted-bool-1-fact ))]
[(flat-if id  "flat-app" flat-app-3-id  "flat-int" flat-int-2-id  "flat-app" flat-app-1-id ) (app-holder flat-app-3-id lifted-app-3-fact ) (int-holder flat-int-2-id lifted-int-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> (if-holder id (if lifted-app-3-fact lifted-int-2-fact lifted-app-1-fact ))]
[(flat-prim-count id  "datum" datum2-val  "flat-list-1" flat-list-1-1-id ) (list-1-holder flat-list-1-1-id lifted-list-1-1-fact ) --> (prim-count-holder id (prim-count datum2-val lifted-list-1-1-fact ))]
[(flat-list-2 id  "datum" datum2-val  "datum" datum1-val ) --> ( list-2-holder id [datum2-val datum1-val ])]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-3" flat-list-3-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-3-holder flat-list-3-1-id lifted-list-3-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-3-1-fact ))]
[(flat-list-1 id  "datum" datum1-val ) --> ( list-1-holder id [datum1-val ])]
[(flat-list-3 id  "flat-lambda" flat-lambda-3-id  "flat-int" flat-int-2-id  "flat-app" flat-app-1-id ) (lambda-holder flat-lambda-3-id lifted-lambda-3-fact ) (int-holder flat-int-2-id lifted-int-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-3-holder id [lifted-lambda-3-fact lifted-int-2-fact lifted-app-1-fact ])]
[(flat-if id  "flat-app" flat-app-3-id  "flat-app" flat-app-2-id  "flat-app" flat-app-1-id ) (app-holder flat-app-3-id lifted-app-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> (if-holder id (if lifted-app-3-fact lifted-app-2-fact lifted-app-1-fact ))]
[(flat-int id  "datum" datum1-val ) --> (int-holder id (int datum1-val ))]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-2" flat-list-2-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-2-holder flat-list-2-1-id lifted-list-2-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-2-1-fact ))]
[(flat-if id  "flat-app" flat-app-3-id  "flat-ref" flat-ref-2-id  "flat-app" flat-app-1-id ) (app-holder flat-app-3-id lifted-app-3-fact ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> (if-holder id (if lifted-app-3-fact lifted-ref-2-fact lifted-app-1-fact ))]
[(flat-list-7 id  "flat-ref" flat-ref-7-id  "flat-ref" flat-ref-6-id  "flat-ref" flat-ref-5-id  "flat-ref" flat-ref-4-id  "flat-if" flat-if-3-id  "flat-app" flat-app-2-id  "flat-ref" flat-ref-1-id ) (ref-holder flat-ref-7-id lifted-ref-7-fact ) (ref-holder flat-ref-6-id lifted-ref-6-fact ) (ref-holder flat-ref-5-id lifted-ref-5-fact ) (ref-holder flat-ref-4-id lifted-ref-4-fact ) (if-holder flat-if-3-id lifted-if-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> ( list-7-holder id [lifted-ref-7-fact lifted-ref-6-fact lifted-ref-5-fact lifted-ref-4-fact lifted-if-3-fact lifted-app-2-fact lifted-ref-1-fact ])]
[(flat-prim-count id  "datum" datum2-val  "flat-list-2" flat-list-2-1-id ) (list-2-holder flat-list-2-1-id lifted-list-2-1-fact ) --> (prim-count-holder id (prim-count datum2-val lifted-list-2-1-fact ))]
[(flat-list-2 id  "flat-int" flat-int-2-id  "flat-int" flat-int-1-id ) (int-holder flat-int-2-id lifted-int-2-fact ) (int-holder flat-int-1-id lifted-int-1-fact ) --> ( list-2-holder id [lifted-int-2-fact lifted-int-1-fact ])]
[(flat-store id  "flat-f-addr" flat-f-addr-2-id  "flat-define-prim" flat-define-prim-1-id ) (f-addr-holder flat-f-addr-2-id lifted-f-addr-2-fact ) (define-prim-holder flat-define-prim-1-id lifted-define-prim-1-fact ) --> (store-holder id (store lifted-f-addr-2-fact lifted-define-prim-1-fact ))]
[(flat-list-12 id  "flat-app" flat-app-12-id  "flat-app" flat-app-11-id  "flat-app" flat-app-10-id  "flat-app" flat-app-9-id  "flat-app" flat-app-8-id  "flat-app" flat-app-7-id  "flat-app" flat-app-6-id  "flat-app" flat-app-5-id  "flat-app" flat-app-4-id  "flat-app" flat-app-3-id  "flat-app" flat-app-2-id  "flat-app" flat-app-1-id ) (app-holder flat-app-12-id lifted-app-12-fact ) (app-holder flat-app-11-id lifted-app-11-fact ) (app-holder flat-app-10-id lifted-app-10-fact ) (app-holder flat-app-9-id lifted-app-9-fact ) (app-holder flat-app-8-id lifted-app-8-fact ) (app-holder flat-app-7-id lifted-app-7-fact ) (app-holder flat-app-6-id lifted-app-6-fact ) (app-holder flat-app-5-id lifted-app-5-fact ) (app-holder flat-app-4-id lifted-app-4-fact ) (app-holder flat-app-3-id lifted-app-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-12-holder id [lifted-app-12-fact lifted-app-11-fact lifted-app-10-fact lifted-app-9-fact lifted-app-8-fact lifted-app-7-fact lifted-app-6-fact lifted-app-5-fact lifted-app-4-fact lifted-app-3-fact lifted-app-2-fact lifted-app-1-fact ])]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-12" flat-list-12-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-12-holder flat-list-12-1-id lifted-list-12-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-12-1-fact ))]
[(flat-varparam id  "datum" datum1-val ) --> (varparam-holder id (varparam datum1-val ))]
[(flat-store id  "flat-f-addr" flat-f-addr-2-id  "flat-define" flat-define-1-id ) (f-addr-holder flat-f-addr-2-id lifted-f-addr-2-fact ) (define-holder flat-define-1-id lifted-define-1-fact ) --> (store-holder id (store lifted-f-addr-2-fact lifted-define-1-fact ))]
[(flat-fixedparam id  "flat-list-1" flat-list-1-1-id ) (list-1-holder flat-list-1-1-id lifted-list-1-1-fact ) --> (fixedparam-holder id (fixedparam lifted-list-1-1-fact ))]
[(flat-if id  "flat-if" flat-if-3-id  "flat-if" flat-if-2-id  "flat-bool" flat-bool-1-id ) (if-holder flat-if-3-id lifted-if-3-fact ) (if-holder flat-if-2-id lifted-if-2-fact ) (bool-holder flat-bool-1-id lifted-bool-1-fact ) --> (if-holder id (if lifted-if-3-fact lifted-if-2-fact lifted-bool-1-fact ))]
[(flat-list-4 id  "datum" datum4-val  "datum" datum3-val  "datum" datum2-val  "datum" datum1-val ) --> ( list-4-holder id [datum4-val datum3-val datum2-val datum1-val ])]
[(flat-list-4 id  "flat-ref" flat-ref-4-id  "flat-ref" flat-ref-3-id  "flat-app" flat-app-2-id  "flat-app" flat-app-1-id ) (ref-holder flat-ref-4-id lifted-ref-4-fact ) (ref-holder flat-ref-3-id lifted-ref-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-4-holder id [lifted-ref-4-fact lifted-ref-3-fact lifted-app-2-fact lifted-app-1-fact ])]
[(flat-list-1 id  "flat-ref" flat-ref-1-id ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> ( list-1-holder id [lifted-ref-1-fact ])]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-7" flat-list-7-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-7-holder flat-list-7-1-id lifted-list-7-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-7-1-fact ))]
[(flat-define id  "datum" datum3-val  "flat-fixedparam" flat-fixedparam-2-id  "flat-app" flat-app-1-id ) (fixedparam-holder flat-fixedparam-2-id lifted-fixedparam-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> (define-holder id (define datum3-val lifted-fixedparam-2-fact lifted-app-1-fact ))]
[(flat-fixedparam id  "flat-list-7" flat-list-7-1-id ) (list-7-holder flat-list-7-1-id lifted-list-7-1-fact ) --> (fixedparam-holder id (fixedparam lifted-list-7-1-fact ))]
[(flat-list-2 id  "flat-app" flat-app-2-id  "flat-app" flat-app-1-id ) (app-holder flat-app-2-id lifted-app-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-2-holder id [lifted-app-2-fact lifted-app-1-fact ])]
[(flat-fixedparam id  "flat-list-0" flat-list-0-1-id ) (list-0-holder flat-list-0-1-id lifted-list-0-1-fact ) --> (fixedparam-holder id (fixedparam lifted-list-0-1-fact ))]
[(flat-define id  "datum" datum3-val  "flat-fixedparam" flat-fixedparam-2-id  "flat-if" flat-if-1-id ) (fixedparam-holder flat-fixedparam-2-id lifted-fixedparam-2-fact ) (if-holder flat-if-1-id lifted-if-1-fact ) --> (define-holder id (define datum3-val lifted-fixedparam-2-fact lifted-if-1-fact ))]
[(flat-list-7 id  "flat-ref" flat-ref-7-id  "flat-ref" flat-ref-6-id  "flat-ref" flat-ref-5-id  "flat-ref" flat-ref-4-id  "flat-ref" flat-ref-3-id  "flat-app" flat-app-2-id  "flat-ref" flat-ref-1-id ) (ref-holder flat-ref-7-id lifted-ref-7-fact ) (ref-holder flat-ref-6-id lifted-ref-6-fact ) (ref-holder flat-ref-5-id lifted-ref-5-fact ) (ref-holder flat-ref-4-id lifted-ref-4-fact ) (ref-holder flat-ref-3-id lifted-ref-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> ( list-7-holder id [lifted-ref-7-fact lifted-ref-6-fact lifted-ref-5-fact lifted-ref-4-fact lifted-ref-3-fact lifted-app-2-fact lifted-ref-1-fact ])]
[(flat-fixedparam id  "flat-list-2" flat-list-2-1-id ) (list-2-holder flat-list-2-1-id lifted-list-2-1-fact ) --> (fixedparam-holder id (fixedparam lifted-list-2-1-fact ))]
[(flat-list-20 id  "flat-int" flat-int-20-id  "flat-int" flat-int-19-id  "flat-int" flat-int-18-id  "flat-int" flat-int-17-id  "flat-int" flat-int-16-id  "flat-int" flat-int-15-id  "flat-int" flat-int-14-id  "flat-int" flat-int-13-id  "flat-int" flat-int-12-id  "flat-int" flat-int-11-id  "flat-int" flat-int-10-id  "flat-int" flat-int-9-id  "flat-int" flat-int-8-id  "flat-int" flat-int-7-id  "flat-int" flat-int-6-id  "flat-int" flat-int-5-id  "flat-int" flat-int-4-id  "flat-int" flat-int-3-id  "flat-int" flat-int-2-id  "flat-int" flat-int-1-id ) (int-holder flat-int-20-id lifted-int-20-fact ) (int-holder flat-int-19-id lifted-int-19-fact ) (int-holder flat-int-18-id lifted-int-18-fact ) (int-holder flat-int-17-id lifted-int-17-fact ) (int-holder flat-int-16-id lifted-int-16-fact ) (int-holder flat-int-15-id lifted-int-15-fact ) (int-holder flat-int-14-id lifted-int-14-fact ) (int-holder flat-int-13-id lifted-int-13-fact ) (int-holder flat-int-12-id lifted-int-12-fact ) (int-holder flat-int-11-id lifted-int-11-fact ) (int-holder flat-int-10-id lifted-int-10-fact ) (int-holder flat-int-9-id lifted-int-9-fact ) (int-holder flat-int-8-id lifted-int-8-fact ) (int-holder flat-int-7-id lifted-int-7-fact ) (int-holder flat-int-6-id lifted-int-6-fact ) (int-holder flat-int-5-id lifted-int-5-fact ) (int-holder flat-int-4-id lifted-int-4-fact ) (int-holder flat-int-3-id lifted-int-3-fact ) (int-holder flat-int-2-id lifted-int-2-fact ) (int-holder flat-int-1-id lifted-int-1-fact ) --> ( list-20-holder id [lifted-int-20-fact lifted-int-19-fact lifted-int-18-fact lifted-int-17-fact lifted-int-16-fact lifted-int-15-fact lifted-int-14-fact lifted-int-13-fact lifted-int-12-fact lifted-int-11-fact lifted-int-10-fact lifted-int-9-fact lifted-int-8-fact lifted-int-7-fact lifted-int-6-fact lifted-int-5-fact lifted-int-4-fact lifted-int-3-fact lifted-int-2-fact lifted-int-1-fact ])]
[(flat-prim-count id  "datum" datum2-val  "flat-list-0" flat-list-0-1-id ) (list-0-holder flat-list-0-1-id lifted-list-0-1-fact ) --> (prim-count-holder id (prim-count datum2-val lifted-list-0-1-fact ))]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-1" flat-list-1-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-1-holder flat-list-1-1-id lifted-list-1-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-1-1-fact ))]
[(flat-list-3 id  "flat-ref" flat-ref-3-id  "flat-app" flat-app-2-id  "flat-app" flat-app-1-id ) (ref-holder flat-ref-3-id lifted-ref-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-3-holder id [lifted-ref-3-fact lifted-app-2-fact lifted-app-1-fact ])]
[(flat-lambda id  "flat-fixedparam" flat-fixedparam-2-id  "flat-if" flat-if-1-id ) (fixedparam-holder flat-fixedparam-2-id lifted-fixedparam-2-fact ) (if-holder flat-if-1-id lifted-if-1-fact ) --> (lambda-holder id (lambda lifted-fixedparam-2-fact lifted-if-1-fact ))]
[(flat-fixedparam id  "flat-list-3" flat-list-3-1-id ) (list-3-holder flat-list-3-1-id lifted-list-3-1-fact ) --> (fixedparam-holder id (fixedparam lifted-list-3-1-fact ))]
[(flat-if id  "flat-if" flat-if-3-id  "flat-app" flat-app-2-id  "flat-app" flat-app-1-id ) (if-holder flat-if-3-id lifted-if-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> (if-holder id (if lifted-if-3-fact lifted-app-2-fact lifted-app-1-fact ))]
[(flat-list-3 id  "datum" datum3-val  "datum" datum2-val  "datum" datum1-val ) --> ( list-3-holder id [datum3-val datum2-val datum1-val ])]
[(flat-list-7 id  "datum" datum7-val  "datum" datum6-val  "datum" datum5-val  "datum" datum4-val  "datum" datum3-val  "datum" datum2-val  "datum" datum1-val ) --> ( list-7-holder id [datum7-val datum6-val datum5-val datum4-val datum3-val datum2-val datum1-val ])]
[(flat-prim-count id  "datum" datum2-val  "flat-list-3" flat-list-3-1-id ) (list-3-holder flat-list-3-1-id lifted-list-3-1-fact ) --> (prim-count-holder id (prim-count datum2-val lifted-list-3-1-fact ))]
[(flat-list-7 id  "flat-ref" flat-ref-7-id  "flat-ref" flat-ref-6-id  "flat-ref" flat-ref-5-id  "flat-ref" flat-ref-4-id  "flat-bool" flat-bool-3-id  "flat-app" flat-app-2-id  "flat-int" flat-int-1-id ) (ref-holder flat-ref-7-id lifted-ref-7-fact ) (ref-holder flat-ref-6-id lifted-ref-6-fact ) (ref-holder flat-ref-5-id lifted-ref-5-fact ) (ref-holder flat-ref-4-id lifted-ref-4-fact ) (bool-holder flat-bool-3-id lifted-bool-3-fact ) (app-holder flat-app-2-id lifted-app-2-fact ) (int-holder flat-int-1-id lifted-int-1-fact ) --> ( list-7-holder id [lifted-ref-7-fact lifted-ref-6-fact lifted-ref-5-fact lifted-ref-4-fact lifted-bool-3-fact lifted-app-2-fact lifted-int-1-fact ])]
[(flat-prim-count id  "datum" datum2-val  "flat-list-4" flat-list-4-1-id ) (list-4-holder flat-list-4-1-id lifted-list-4-1-fact ) --> (prim-count-holder id (prim-count datum2-val lifted-list-4-1-fact ))]
[(flat-bool id  "datum" datum1-val ) --> (bool-holder id (bool datum1-val ))]
[(flat-f-addr id  "flat-list-0" flat-list-0-2-id  "datum" datum1-val ) (list-0-holder flat-list-0-2-id lifted-list-0-2-fact ) --> (f-addr-holder id (f-addr lifted-list-0-2-fact datum1-val ))]
[(flat-list-2 id  "flat-ref" flat-ref-2-id  "flat-ref" flat-ref-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> ( list-2-holder id [lifted-ref-2-fact lifted-ref-1-fact ])]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-20" flat-list-20-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-20-holder flat-list-20-1-id lifted-list-20-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-20-1-fact ))]
[(flat-app id  "flat-ref" flat-ref-2-id  "flat-list-4" flat-list-4-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (list-4-holder flat-list-4-1-id lifted-list-4-1-fact ) --> (app-holder id (app lifted-ref-2-fact lifted-list-4-1-fact ))]
[(flat-list-2 id  "flat-ref" flat-ref-2-id  "flat-int" flat-int-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (int-holder flat-int-1-id lifted-int-1-fact ) --> ( list-2-holder id [lifted-ref-2-fact lifted-int-1-fact ])]
[(flat-list-2 id  "flat-int" flat-int-2-id  "flat-ref" flat-ref-1-id ) (int-holder flat-int-2-id lifted-int-2-fact ) (ref-holder flat-ref-1-id lifted-ref-1-fact ) --> ( list-2-holder id [lifted-int-2-fact lifted-ref-1-fact ])]
[(flat-list-1 id  "flat-app" flat-app-1-id ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-1-holder id [lifted-app-1-fact ])]
[(flat-list-2 id  "flat-ref" flat-ref-2-id  "flat-app" flat-app-1-id ) (ref-holder flat-ref-2-id lifted-ref-2-fact ) (app-holder flat-app-1-id lifted-app-1-fact ) --> ( list-2-holder id [lifted-ref-2-fact lifted-app-1-fact ])]
